package in.nareshit.prasad.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import in.nareshit.prasad.model.User;
import in.nareshit.prasad.model.UserRequest;
import in.nareshit.prasad.model.UserResponse;
import in.nareshit.prasad.service.UserService;
import in.nareshit.prasad.util.JwtUtil;

@RestController
@RequestMapping("/user")
public class UserController 
{
	
	@Autowired
	private UserService userService; //HAS-A RelationShip
	
	@Autowired
	private JwtUtil util;
	
	@Autowired
	private AuthenticationManager authenticationManager ;
	
	//1. Save User data in database
	@PostMapping("/save")
	public ResponseEntity<String> saveUser(@RequestBody User user)
	{
		Integer id = userService.saveUser(user);
		String body = "User '"+id+"' saved";
		return new ResponseEntity<String>(body,HttpStatus.OK);
	}
	
	//2.Validate user and Generate token(Login)
	@PostMapping("/login")
	public ResponseEntity<UserResponse> loginUser(@RequestBody UserRequest userRequest)
	{
		//ToDo :validate username/password with database 
		authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(userRequest.getUsername(), userRequest.getPassword()));
		
		String token = util.generateToken(userRequest.getUsername());
		//return new ResponseEntity<UserResponse>(token,"Success!");
		return ResponseEntity.ok(new UserResponse(token,"Success ! Generated by Prasad"));
	}
	
	
	   
}
